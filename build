#!/usr/bin/env python3
import fire
import os
from pathlib import Path
import logging


log = logging.getLogger(__name__)


def shell(command):
	print(command)
	return os.system(command)


def set_icon(file, icon):
	if os.system("which ResourceHacker.exe"):
		log.error(
			"Unable to set the icon, install ResourceHacker and "
			"add it to PATH environment variable."
		)
	else:
		shell(
			"ResourceHacker.exe"
			f" -open '{file}'"
			" -save 'tmp.exe'"
			" -action addoverwrite"
			f" -res '{icon}'"
			" -mask ICONGROUP,MAINICON,"
		)
		shell(f"mv 'tmp.exe' '{file}'")


class Cli:
	def __call__(self):
		"""Build rex_astra windows executable"""

		build_dir = Path(__file__).parent / "bin"
		build_dir.mkdir(exist_ok=True)
		os.chdir(build_dir)

		shell("mkdir -p .build")
		shell("cd ..; cp -ur * bin/.build/")
		shell(
			"cd .build; rm -rf .git build build-requirements.txt " +
			"rex_astra.sublime-* .gitignore " + 
			" ".join(f"'{f}'" 
				for f in Path("../.gitignore").read_text().split("\n")
			)
		)

		shell("rm -f 'Rex Astra.love'")
		shell("cd .build; zip -9r '../Rex Astra.love' ./*")
		shell("rm -rf .build")

		shell("rm -rf rex_astra")
		shell("mkdir -p rex_astra")
		shell(
			"cat '/mnt/c/Program Files/LOVE/love.exe' 'Rex Astra.love'"
			" > 'rex_astra/Rex Astra.exe'"
		)

		set_icon("rex_astra/Rex Astra.exe", "../sprites/icon.ico")

		shell("chmod +x 'rex_astra/Rex Astra.exe'")

		shell(
			"cp -t rex_astra/ " + 
			" ".join(f"/mnt/c/Program\\ Files/LOVE/{dll}" for dll in ["*.dll", "license.txt"])
		)
		shell("zip -9r rex_astra.zip rex_astra")


if __name__ == "__main__":
	fire.Fire(Cli())
